{"ast":null,"code":"var _jsxFileName = \"C:\\\\cs\\\\pulmonic plus\\\\english-news-website\\\\src\\\\components\\\\home\\\\content\\\\weatherModule\\\\weather_demo.js\";\nimport React from \"react\";\nimport Geocode from \"react-geocode\";\nimport { Button } from 'antd';\n\nclass WeatherDemo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      latitude: '',\n      longitude: '',\n      altitude: '',\n      heading: '',\n      speed: ''\n    };\n  }\n\n  handleClick(e) {\n    //通过props调用父组件的方法\n    //用户点击后current值马上改变然后准备传值给父组件\n    //  this.props.getType(this.props.coords.latitude,this.props.coords.longitude);\n    // set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\n    Geocode.setApiKey(\"AIzaSyBMPLjYEZjXdJ0sFpfhyZrFFawgl5DLqkA\"); //  // AIzaSyBtHxDsRHmdaWakuOLb28L-u7sQfOg246I\n    // Enable or disable logs. Its optional.\n\n    Geocode.enableDebug(); // Get address from latidude & longitude.\n\n    Geocode.fromLatLng(this.props.coords.latitude, this.props.coords.longitude).then(response => {\n      const address = response.results[0].formatted_address;\n      console.log(address);\n      this.props.getType(address);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  componentWillMount() {}\n\n  render() {\n    return !this.props.isGeolocationAvailable ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Your browser does not support Geolocation\") : !this.props.isGeolocationEnabled ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Geolocation is not enabled\") : this.props.coords ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick.bind(this),\n      type: \"primary\",\n      class: \"weather_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Click me to get my location weather accurately!\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Getting the location data\\u2026 \");\n  }\n\n  componentDidMount() {}\n\n  componentWillReceiveProps(nextProps) {\n    console.log(this.props);\n    console.log('222');\n  }\n\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(WeatherDemo);","map":{"version":3,"sources":["C:/cs/pulmonic plus/english-news-website/src/components/home/content/weatherModule/weather_demo.js"],"names":["React","Geocode","Button","WeatherDemo","Component","constructor","state","latitude","longitude","altitude","heading","speed","handleClick","e","setApiKey","enableDebug","fromLatLng","props","coords","then","response","address","results","formatted_address","console","log","getType","error","componentWillMount","render","isGeolocationAvailable","isGeolocationEnabled","bind","componentDidMount","componentWillReceiveProps","nextProps","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,SAAS,EAAC,EAFC;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,OAAO,EAAC,EAJG;AAKXC,MAAAA,KAAK,EAAE;AALI,KAAb;AAOD;;AACDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AAGT;AACA;AAEF;AACE;AACAZ,IAAAA,OAAO,CAACa,SAAR,CAAkB,yCAAlB,EARS,CAQsD;AAC/D;;AACAb,IAAAA,OAAO,CAACc,WAAR,GAVS,CAYT;;AACAd,IAAAA,OAAO,CAACe,UAAR,CAAmB,KAAKC,KAAL,CAAWC,MAAX,CAAkBX,QAArC,EAA+C,KAAKU,KAAL,CAAWC,MAAX,CAAkBV,SAAjE,EAA4EW,IAA5E,CACEC,QAAQ,IAAI;AAEV,YAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,WAAKJ,KAAL,CAAWS,OAAX,CAAmBL,OAAnB;AACD,KAPH,EAQEM,KAAK,IAAI;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAVH;AAcL;;AAEDC,EAAAA,kBAAkB,GAAG,CAEpB;;AACCC,EAAAA,MAAM,GAAG;AACL,WAAO,CAAC,KAAKZ,KAAL,CAAWa,sBAAZ,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADG,GAEH,CAAC,KAAKb,KAAL,CAAWc,oBAAZ,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADA,GAEA,KAAKd,KAAL,CAAWC,MAAX,GACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKN,WAAL,CAAiBoB,IAAjB,CAAsB,IAAtB,CAAjB;AAA8C,MAAA,IAAI,EAAC,SAAnD;AAA6D,MAAA,KAAK,EAAC,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADA,CADE,GAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CA3CJ;AA6CH;;AACHC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChCX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAGD;;AAnGqC;;AA0G1C,eAAeW,UAAU,CAAC;AACtBC,EAAAA,eAAe,EAAE;AACbC,IAAAA,kBAAkB,EAAE;AADP,GADK;AAItBC,EAAAA,mBAAmB,EAAE;AAJC,CAAD,CAAV,CAKZpC,WALY,CAAf","sourcesContent":["import React from \"react\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Button } from 'antd';\r\n\r\nclass WeatherDemo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      latitude: '',\r\n      longitude:'',\r\n      altitude: '',\r\n      heading:'',\r\n      speed: ''\r\n    };\r\n  }\r\n  handleClick(e) {\r\n\r\n\r\n        //通过props调用父组件的方法\r\n        //用户点击后current值马上改变然后准备传值给父组件\r\n\r\n      //  this.props.getType(this.props.coords.latitude,this.props.coords.longitude);\r\n        // set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\r\n        Geocode.setApiKey(\"AIzaSyBMPLjYEZjXdJ0sFpfhyZrFFawgl5DLqkA\");  //  // AIzaSyBtHxDsRHmdaWakuOLb28L-u7sQfOg246I\r\n        // Enable or disable logs. Its optional.\r\n        Geocode.enableDebug();\r\n\r\n        // Get address from latidude & longitude.\r\n        Geocode.fromLatLng(this.props.coords.latitude, this.props.coords.longitude).then(\r\n          response => {\r\n\r\n            const address = response.results[0].formatted_address;\r\n\r\n            console.log(address);\r\n            this.props.getType(address);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n\r\n\r\n  };\r\n\r\n  componentWillMount() {\r\n\r\n  };\r\n    render() {\r\n        return !this.props.isGeolocationAvailable ? (\r\n            <div>Your browser does not support Geolocation</div>\r\n        ) : !this.props.isGeolocationEnabled ? (\r\n            <div>Geolocation is not enabled</div>\r\n        ) : this.props.coords ? (\r\n          <div>\r\n          <Button onClick={this.handleClick.bind(this)} type=\"primary\" class=\"weather_button\">\r\n          Click me to get my location weather accurately!\r\n          </Button>\r\n{/*\r\n\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>My latitude</td>\r\n                        <td>{this.props.coords.latitude}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>My longitude</td>\r\n                        <td>{this.props.coords.longitude}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>My altitude</td>\r\n                        <td>{this.props.coords.altitude}</td>\r\n                    </tr>\r\n\r\n                    <button onClick={this.handleClick.bind(this)}> get my loaction </button>\r\n                    <Button onClick={this.handleClick.bind(this)} type=\"primary\" >\r\n                       get my loaction\r\n                    </Button>\r\n                    <tr>\r\n                        <td>heading</td>\r\n                        <td>{this.props.coords.heading}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>speed</td>\r\n                        <td>{this.props.coords.speed}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            */}\r\n            </div>\r\n        ) : (\r\n            <div>Getting the location data&hellip; </div>\r\n        );\r\n    }\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n      console.log(this.props);\r\n      console.log('222');\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(WeatherDemo);\r\n"]},"metadata":{},"sourceType":"module"}