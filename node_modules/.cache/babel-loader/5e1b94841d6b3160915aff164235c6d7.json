{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport { getAlignmentOffset } from './utilities/style-utilities';\n\nvar defaultButtonStyles = function defaultButtonStyles(disabled) {\n  return {\n    border: 0,\n    background: 'rgba(0,0,0,0.4)',\n    color: 'white',\n    padding: 10,\n    textTransform: 'uppercase',\n    opacity: disabled && 0.3,\n    cursor: disabled ? 'not-allowed' : 'pointer'\n  };\n};\n\nexport var PreviousButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PreviousButton, _React$Component);\n\n  function PreviousButton() {\n    var _this;\n\n    _classCallCheck(this, PreviousButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PreviousButton).apply(this, arguments));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PreviousButton, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      event.preventDefault();\n      this.props.previousSlide();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$defaultCo = this.props.defaultControlsConfig,\n          prevButtonClassName = _this$props$defaultCo.prevButtonClassName,\n          _this$props$defaultCo2 = _this$props$defaultCo.prevButtonStyle,\n          prevButtonStyle = _this$props$defaultCo2 === void 0 ? {} : _this$props$defaultCo2,\n          prevButtonText = _this$props$defaultCo.prevButtonText;\n      var disabled = this.props.currentSlide === 0 && !this.props.wrapAround || this.props.slideCount === 0;\n      return React.createElement(\"button\", {\n        className: prevButtonClassName,\n        style: _objectSpread({}, defaultButtonStyles(disabled), {}, prevButtonStyle),\n        disabled: disabled,\n        onClick: this.handleClick,\n        \"aria-label\": \"previous\",\n        type: \"button\"\n      }, prevButtonText || 'Prev');\n    }\n  }]);\n\n  return PreviousButton;\n}(React.Component);\nexport var NextButton =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(NextButton, _React$Component2);\n\n  function NextButton() {\n    var _this2;\n\n    _classCallCheck(this, NextButton);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(NextButton).apply(this, arguments));\n    _this2.handleClick = _this2.handleClick.bind(_assertThisInitialized(_this2));\n    _this2.nextButtonDisable = _this2.nextButtonDisabled.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(NextButton, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      event.preventDefault();\n      this.props.nextSlide();\n    }\n  }, {\n    key: \"nextButtonDisabled\",\n    value: function nextButtonDisabled(params) {\n      var cellAlign = params.cellAlign,\n          cellSpacing = params.cellSpacing,\n          currentSlide = params.currentSlide,\n          frameWidth = params.frameWidth,\n          positionValue = params.positionValue,\n          slideCount = params.slideCount,\n          slidesToShow = params.slidesToShow,\n          slideWidth = params.slideWidth,\n          wrapAround = params.wrapAround;\n      var buttonDisabled = false;\n\n      if (!wrapAround) {\n        var alignmentOffset = getAlignmentOffset(currentSlide, {\n          cellAlign: cellAlign,\n          cellSpacing: cellSpacing,\n          frameWidth: frameWidth,\n          slideWidth: slideWidth\n        });\n        var relativePosition = positionValue - alignmentOffset;\n        var width = slideWidth + cellSpacing;\n        var endOffset = cellAlign === 'center' ? 2 * alignmentOffset : alignmentOffset;\n        var endPosition = -width * slideCount + width * slidesToShow - endOffset;\n        buttonDisabled = relativePosition < endPosition || Math.abs(relativePosition - endPosition) < 0.01;\n      }\n\n      return buttonDisabled;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          cellAlign = _this$props.cellAlign,\n          cellSpacing = _this$props.cellSpacing,\n          currentSlide = _this$props.currentSlide,\n          frameWidth = _this$props.frameWidth,\n          left = _this$props.left,\n          slideCount = _this$props.slideCount,\n          slidesToShow = _this$props.slidesToShow,\n          slideWidth = _this$props.slideWidth,\n          top = _this$props.top,\n          vertical = _this$props.vertical,\n          wrapAround = _this$props.wrapAround;\n      var _this$props$defaultCo3 = this.props.defaultControlsConfig,\n          nextButtonClassName = _this$props$defaultCo3.nextButtonClassName,\n          _this$props$defaultCo4 = _this$props$defaultCo3.nextButtonStyle,\n          nextButtonStyle = _this$props$defaultCo4 === void 0 ? {} : _this$props$defaultCo4,\n          nextButtonText = _this$props$defaultCo3.nextButtonText;\n      var disabled = this.nextButtonDisabled({\n        cellAlign: cellAlign,\n        cellSpacing: cellSpacing,\n        currentSlide: currentSlide,\n        frameWidth: frameWidth,\n        positionValue: vertical ? top : left,\n        slideCount: slideCount,\n        slidesToShow: slidesToShow,\n        slideWidth: slideWidth,\n        wrapAround: wrapAround\n      });\n      return React.createElement(\"button\", {\n        className: nextButtonClassName,\n        style: _objectSpread({}, defaultButtonStyles(disabled), {}, nextButtonStyle),\n        disabled: disabled,\n        onClick: this.handleClick,\n        \"aria-label\": \"next\",\n        type: \"button\"\n      }, nextButtonText || 'Next');\n    }\n  }]);\n\n  return NextButton;\n}(React.Component);\nexport var PagingDots =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(PagingDots, _React$Component3);\n\n  function PagingDots() {\n    _classCallCheck(this, PagingDots);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PagingDots).apply(this, arguments));\n  }\n\n  _createClass(PagingDots, [{\n    key: \"getDotIndexes\",\n    value: function getDotIndexes(slideCount, slidesToScroll, slidesToShow, cellAlign) {\n      var dotIndexes = [];\n      var lastDotIndex = slideCount - slidesToShow;\n\n      switch (cellAlign) {\n        case 'center':\n        case 'right':\n          lastDotIndex += slidesToShow - 1;\n          break;\n      }\n\n      if (lastDotIndex < 0) {\n        return [0];\n      }\n\n      for (var i = 0; i < lastDotIndex; i += slidesToScroll) {\n        dotIndexes.push(i);\n      }\n\n      dotIndexes.push(lastDotIndex);\n      return dotIndexes;\n    }\n  }, {\n    key: \"getListStyles\",\n    value: function getListStyles() {\n      return {\n        position: 'relative',\n        top: -10,\n        display: 'flex',\n        margin: 0,\n        padding: 0,\n        listStyleType: 'none'\n      };\n    }\n  }, {\n    key: \"getButtonStyles\",\n    value: function getButtonStyles(active) {\n      return {\n        cursor: 'pointer',\n        opacity: active ? 1 : 0.5,\n        background: 'transparent',\n        border: 'none',\n        fill: 'black'\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var indexes = this.getDotIndexes(this.props.slideCount, this.props.slidesToScroll, this.props.slidesToShow, this.props.cellAlign);\n      var _this$props$defaultCo5 = this.props.defaultControlsConfig,\n          pagingDotsContainerClassName = _this$props$defaultCo5.pagingDotsContainerClassName,\n          pagingDotsClassName = _this$props$defaultCo5.pagingDotsClassName,\n          _this$props$defaultCo6 = _this$props$defaultCo5.pagingDotsStyle,\n          pagingDotsStyle = _this$props$defaultCo6 === void 0 ? {} : _this$props$defaultCo6;\n      return React.createElement(\"ul\", {\n        className: pagingDotsContainerClassName,\n        style: this.getListStyles()\n      }, indexes.map(function (index) {\n        var isActive = _this3.props.currentSlide === index;\n        return React.createElement(\"li\", {\n          key: index,\n          className: isActive ? 'paging-item active' : 'paging-item'\n        }, React.createElement(\"button\", {\n          className: pagingDotsClassName,\n          type: \"button\",\n          style: _objectSpread({}, _this3.getButtonStyles(isActive), {}, pagingDotsStyle),\n          onClick: _this3.props.goToSlide.bind(null, index),\n          \"aria-label\": \"slide \".concat(index + 1, \" bullet\")\n        }, React.createElement(\"svg\", {\n          className: \"paging-dot\",\n          width: \"6\",\n          height: \"6\"\n        }, React.createElement(\"circle\", {\n          cx: \"3\",\n          cy: \"3\",\n          r: \"3\"\n        }))));\n      }));\n    }\n  }]);\n\n  return PagingDots;\n}(React.Component);","map":null,"metadata":{},"sourceType":"module"}